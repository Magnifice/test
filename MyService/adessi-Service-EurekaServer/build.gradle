buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
        dockerPluginVersion            = '1.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:${dockerPluginVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'com.adesso'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Finchley.RELEASE'
}

jar {
    manifest { attributes 'Main-Class': 'com.adesso.adessiServiceEurekaServer.AdessiServiceEurekaServerApplication' }
    baseName = 'eureka'
    exclude 'static/swagger/'
}

task buildDocker(type: Docker, dependsOn: build) {
    dockerfile = file('Dockerfile')
    tagVersion = 'latest'
    tag = "myService/${project.name}"
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
bootRun {
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}